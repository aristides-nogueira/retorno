{"version":3,"sources":["config/firebase.js","components/Feedback/index.js","components/Result/index.js","components/Feedback/style.js","components/Result/style.js","components/Form/index.js","components/Form/style.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","SuccessFeedback","style","paddingTop","color","fontSize","FailedFeedback","classes","name","date","studentEmail","useState","contactEmail","setContactEmail","contactPhone","setContactPhone","complete","setComplete","className","feedbackForm","formControl","TextField","label","variant","value","formField","onChange","e","target","Button","onClick","collection","add","success","timestamp","Date","withStyles","theme","main","display","flexDirection","padding","spacing","width","inputedName","inputedDate","Grid","container","direction","justify","alignItems","result","textAlign","maxWidth","margin","listStyleType","breakpoints","down","email","fontWeight","fontStyle","password","copyIcon","cursor","paddingLeft","feedback","justifyContent","borderColor","backgroundColor","silver","gold","birthDate","student","setStudent","useEffect","key","toLowerCase","split","join","format","doc","get","then","user","data","studentClass","week","includes","code","period","group","enterat","parentreuniondate","form","paddingBottom","box","initialTip","errorMessage","setName","setBirthDate","confirm","setConfirm","validated","setValidated","Box","boxShadow","startIcon","error","replace","match","utils","DateFnsUtils","locale","ptLocale","DatePicker","autoOk","disableFuture","inputVariant","openTo","Header","AppBar","position","Toolbar","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3bf5f76b.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAD2nlqnNZfUtGaV_Z6Ta_eB55N27-6jrM\",\n  authDomain: \"classroom-emails.firebaseapp.com\",\n  databaseURL: \"https://classroom-emails.firebaseio.com\",\n  projectId: \"classroom-emails\",\n  storageBucket: \"classroom-emails.appspot.com\",\n  messagingSenderId: \"932392480727\",\n  appId: \"1:932392480727:web:2c5303bf16a92a6a85a592\",\n  measurementId: \"G-ZERZV8Q07P\",\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport style from './style';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport firebase from '../../config/firebase';\nimport Grid from '@material-ui/core/Grid';\n\nconst db = firebase.firestore();\n\nconst Feedback = ({\n  success,\n  inputedName,\n  inputedDate,\n  studentEmail,\n  classes\n}) => {\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <div className={classes.main}>\n        {\n          success\n          ? <SuccessFeedback />\n          : <FailedFeedback\n            classes={classes}\n            name={inputedName}\n            date={inputedDate}\n            studentEmail={studentEmail}\n          />\n        }\n      </div>\n    </Grid>\n  );\n}\n\nconst SuccessFeedback = () => {\n  return <div style={{ paddingTop: 8 }}>\n    Ficamos felizes que tenha coseguido! Boas aulas!\n    <div>\n      <span style={{ color: 'white', fontSize: 6 }}>#gratidão</span>\n    </div>\n  </div>\n};\n\nconst FailedFeedback = ({ classes, name, date, studentEmail }) => {\n  const [contactEmail, setContactEmail] = useState('');\n  const [contactPhone, setContactPhone] = useState('');\n  const [ complete, setComplete ] = useState(false);\n\n  return <div>\n    <p>\n      Caso tenha logado, mas não apareceu a turma do aluno, certifique-se que <br />\n      fez o acesso com a conta correta  <br />\n      (não irá aparecer caso esteja com seu email pessoal,  <br />\n      o acesso deve ser feito com o email e senha  acima)\n    </p>\n    <p>\n      Se mesmo assim, não deu certo, por favor, nos deixe seu  <br />\n      email e telefone para contato.  <br />\n      A equipe de suporte da EMEI Aristides entrará em contato com você!\n    </p>\n    <div className={classes.feedbackForm}>\n      <div className={classes.formControl}>\n        <TextField\n          label=\"Email para contato\"\n          variant=\"outlined\"\n          value={contactEmail}\n          className={classes.formField}\n          onChange={(e) => {\n            setContactEmail(e.target.value)\n          }}\n          />\n      </div>\n      <div className={classes.formControl}>\n        <TextField\n          label=\"Telefone para contato\"\n          variant=\"outlined\"\n          value={contactPhone}\n          className={classes.formField}\n          onChange={(e) => {\n            setContactPhone(e.target.value)\n          }}\n        />\n      </div>\n      <div className={classes.feedbackForm}>\n        <Button\n          variant='contained'\n          color='primary'\n          onClick={() => {\n            db.collection(\"contacts\").add({\n              name,\n              date,\n              studentEmail,\n              contactEmail,\n              contactPhone,\n              success: false,\n              timestamp: new Date()\n            });\n            setComplete(true);\n          }}\n        >\n          Solicitar contato\n        </Button>\n        {\n          complete && <span style={{ paddingTop: 8 }}>\n            Em breve entraremos em contato!\n          </span>\n        }\n      </div>\n    </div>\n  </div>\n};\n\nexport default withStyles(style)(Feedback);\n","import React, { useState, useEffect } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport style from './style';\nimport { format } from 'date-fns';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Button from '@material-ui/core/Button';\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp';\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown';\nimport Feedback from '../Feedback';\nimport firebase from '../../config/firebase';\n\nconst db = firebase.firestore();\n\nconst Result = ({\n  name,\n  classes,\n  birthDate\n}) => {\n  const [ student, setStudent ] = useState(null);\n\n  useEffect(() => {\n    const key = `${name.toLowerCase().split(\" \").join(\"\")}${format(birthDate,'ddMyyyy')}`;\n    db.collection('retorno').doc(key).get().then((user) => {\n      setStudent(user.data());\n    })\n  }, []);\n\n  if (!student) {\n    return null;\n  }\n\n  const studentClass = student.week.includes('DOURADA') ? classes.gold : classes.silver;\n\n  return (\n    <div className={classes.result}>\n      <p><b>Dados do aluno</b></p> <br />\n      Código eol do aluno: {student.code} <br />\n      Período: {student.period} <br />\n      Turma: {student.group} <br />\n      Horário de aula: {student.enterat} <br /> <br />\n\n      <p><b>Reunião presencial</b></p> <br />\n      🗓️🕒 Data e horário: {student.parentreuniondate} <br />\n      ⚠️ Atenção ⚠️: na reunião será entregue os crachás e carteirinhas pela professora e também será dada todas as orientações sobre os protocolos de saúde que deverão ser seguidos. <br />\n      <br />\n      🎒📝 Itens que devem estar na mochila da criança: <br />\n      ➡️ Caneca (copo); <br />\n      ➡️ Máscara - mínimo 3; <br />\n      ➡️ Estojo - com os materiais que foram adquiridos com o VOUCHER disponibilizado pela Prefeitura; <br />\n      ➡️ 1 troca de roupa (de acordo com a temperatura); <br />\n      ➡️ (Foi solicitado uma pasta plástica para colocar o caderno e entregar no dia da reunião para a professora.) <br />\n\n\n      <p><b>❗ O retorno da criança será com revezamento semanal. ❗</b></p> <br />\n      <div>\n        As crianças com crachá da turma <b className={classes.gold}>semana dourada</b> virão na primeira semana, as da turma <b className={classes.silver}>semana prateada</b> na segunda e assim sucessivamente.\n      </div>\n      <div>\n        <p>Sua criança está no grupo <b className={studentClass}>{student.week}</b></p>\n      </div>\n\n      Dessa forma, a criança deverá frequentar as aulas apenas nas semanas das respectivas segundas-feiras: <br />\n      <ul>\n        <li>➡️ {student['sem 1']}</li>\n        <li>➡️ {student['sem 2']}</li>\n        <li>➡️ {student['sem 3']}</li>\n        <li>➡️ {student['sem 4']}</li>\n        <li>➡️ {student['sem 5']}</li>\n        <li>➡️ {student['sem 6']}</li>\n        <li>➡️ {student['sem 7']}</li>\n        <li>➡️ {student['sem 8']}</li>\n        <li>➡️ {student['sem 9']}</li>\n        {\n          student['sem 10'] && <li>➡️ {student['sem 10']}</li>\n        }\n      </ul>\n <br />\n      <b>Não se sente seguro no retorno?</b> <br />\n      <div>\n        O <b>retorno presencial não é obrigatório</b>, quem desejar permanecer no remoto, basta o responsável legal (mãe, pai ou quem possui a guarda) comparecer na secretaria preferencialmente das 10h às 12h ou das 14h às 16h para preencher o formulário de preferência no remoto. <br />\n      </div>\n <br />\n <br />\n      Qualquer dúvida, nos ligue no telefone fixo 11 5528-1873!\n      <br />\n      <br />\n    </div>\n  );\n}\n\nexport default withStyles(style)(Result);\n","export default (theme) => ({\n  main: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  feedbackForm: {\n    display: 'flex',\n    flexDirection: 'column',\n    padding: theme.spacing(2, 0),\n  },\n  formControl: {\n    padding: theme.spacing(2, 0),\n  },\n  formField: {\n    width: '100%',\n  },\n});\n","export default (theme) => ({\n  result: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingTop: theme.spacing(4),\n    textAlign: 'left',\n    maxWidth: '50%',\n    '& p': {\n      margin: 0,\n      paddingTop: theme.spacing(2),\n    },\n    '& ul': {\n      listStyleType: 'none'\n    },\n    [theme.breakpoints.down('sm')]: {\n      maxWidth: '95%',\n    },\n  },\n  email: {\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n  },\n  password: {\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n  },\n  copyIcon: {\n    cursor: 'pointer',\n    paddingLeft: theme.spacing(1)\n  },\n  feedback: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  success: {\n    borderColor: '#4caf50 !important',\n    backgroundColor: '#4caf50 !important',\n  },\n  silver: {\n    color: '#7d8288',\n  },\n  gold: {\n    color: '#9f8d58',\n  },\n});\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core';\nimport style from './style';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport ptLocale from \"date-fns/locale/pt-BR\";\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Result from '../Result';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nconst Form = ({\n  classes\n}) => {\n  const [ name, setName ] = useState('');\n  const [ birthDate, setBirthDate ] = useState(new Date('2015-01-02'));\n  const [ confirm, setConfirm ] = useState(false);\n  const [ validated, setValidated ] = useState(false);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <span className={classes.initialTip}>\n        EMEI Aristides Nogueira - RETORNO DAS AULAS PRESENCIAIS AGOSTO 2021\n      </span>\n      {\n        confirm && <Result name={name} birthDate={birthDate} />\n      }\n      <div className={classes.form}>\n        <Box boxShadow={3} className={classes.box}>\n          {\n            !confirm ?\n            <>\n              <span>Complete as informações abaixo:</span>\n              <div className={classes.formControl}>\n                <TextField\n                  label=\"Nome Completo do aluno\"\n                  variant=\"outlined\"\n                  value={name}\n                  error={validated && name === ''}\n                  className={classes.formField}\n                  onChange={(e) => {\n                    const value = e.target.value.replace(/[^A-zÀ-ú`´~^\\s]/gi, '')\n                    if (value.match(/[a-zA-Zâãàáêéèíìôóòõúù`´~^]/g) || value === '') {\n                      setName(value)\n                    }\n                  }}\n                />\n              </div>\n              <div className={classes.formControl}>\n                <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ptLocale}>\n                  <DatePicker\n                    autoOk\n                    disableFuture\n                    variant=\"inline\"\n                    inputVariant=\"outlined\"\n                    openTo=\"year\"\n                    label=\"Data de Nascimento\"\n                    format=\"dd 'de' MMMM/yyyy\"\n                    className={classes.formField}\n                    value={birthDate}\n                    onChange={setBirthDate}\n                  />\n                </MuiPickersUtilsProvider>\n              </div>\n              <div>\n                <Button\n                  variant='contained'\n                  color=\"primary\"\n                  onClick={() => {\n                    setValidated(true);\n                    if (name) {\n                      setConfirm(true);\n                    }\n                  }}\n                >\n                  Pegar Acesso\n                </Button>\n              </div>\n              <div className={classes.errorMessage}>\n                {\n                  validated && name === '' && <span>\n                    Por favor, todos os campos devem ser preenchidos\n                  </span>\n                }\n              </div>\n            </>\n            : <Button\n                variant='contained'\n                color=\"primary\"\n                startIcon={<ReplayIcon />}\n                onClick={() => {\n                  setConfirm(false);\n                  setValidated(false);\n                }}\n              >\n                Tentar Outra vez\n              </Button>\n          }\n\n        </Box>\n      </div>\n    </Grid>\n  );\n}\n\nexport default withStyles(style)(Form);\n","export default (theme) => ({\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n    paddingBottom: theme.spacing(2),\n  },\n  box: {\n    padding: theme.spacing(4, 5)\n  },\n  initialTip: {\n    padding: theme.spacing(1, 0),\n    fontSize: '1.2em'\n  },\n  formControl: {\n    padding: theme.spacing(4, 0),\n  },\n  formField: {\n    width: '100%',\n  },\n  errorMessage: {\n    paddingTop: theme.spacing(1)\n  }\n});\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst Header = ({\n}) => {\n  return (\n    <div style={{ paddingBottom: 20 }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          EMEI Aristides Nogueira - RETORNO DAS AULAS PRESENCIAIS AGOSTO 2021\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport Header from './components/Header';\n\nfunction App() {\n  return (\n    <div className=\"App\" style={{ fontSize: 20, color: '#555' }}>\n      <Header />\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}